// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.14.0
// source: metaservice.proto

package lnrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetInfo2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetInfo2Request) Reset() {
	*x = GetInfo2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metaservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfo2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfo2Request) ProtoMessage() {}

func (x *GetInfo2Request) ProtoReflect() protoreflect.Message {
	mi := &file_metaservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfo2Request.ProtoReflect.Descriptor instead.
func (*GetInfo2Request) Descriptor() ([]byte, []int) {
	return file_metaservice_proto_rawDescGZIP(), []int{0}
}

type GetInfo2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Neutrino  *NeutrinoInfo    `protobuf:"bytes,1,opt,name=neutrino,proto3" json:"neutrino,omitempty"`
	Wallet    *WalletInfo      `protobuf:"bytes,2,opt,name=wallet,proto3" json:"wallet,omitempty"`
	Lightning *GetInfoResponse `protobuf:"bytes,3,opt,name=lightning,proto3" json:"lightning,omitempty"`
}

func (x *GetInfo2Response) Reset() {
	*x = GetInfo2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metaservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInfo2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInfo2Response) ProtoMessage() {}

func (x *GetInfo2Response) ProtoReflect() protoreflect.Message {
	mi := &file_metaservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInfo2Response.ProtoReflect.Descriptor instead.
func (*GetInfo2Response) Descriptor() ([]byte, []int) {
	return file_metaservice_proto_rawDescGZIP(), []int{1}
}

func (x *GetInfo2Response) GetNeutrino() *NeutrinoInfo {
	if x != nil {
		return x.Neutrino
	}
	return nil
}

func (x *GetInfo2Response) GetWallet() *WalletInfo {
	if x != nil {
		return x.Wallet
	}
	return nil
}

func (x *GetInfo2Response) GetLightning() *GetInfoResponse {
	if x != nil {
		return x.Lightning
	}
	return nil
}

type ChangePasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	//current_password should be the current valid passphrase used to unlock the daemon.
	CurrentPassphrase string `protobuf:"bytes,1,opt,name=current_passphrase,json=currentPassphrase,proto3" json:"current_passphrase,omitempty"`
	//
	//Binary form of current_passphrase, if specified will override current_passphrase.
	//When using JSON, this field must be encoded as base64.
	CurrentPasswordBin []byte `protobuf:"bytes,2,opt,name=current_password_bin,json=currentPasswordBin,proto3" json:"current_password_bin,omitempty"`
	//
	//new_passphrase should be the new passphrase that will be needed to unlock the
	//daemon.
	NewPassphrase string `protobuf:"bytes,3,opt,name=new_passphrase,json=newPassphrase,proto3" json:"new_passphrase,omitempty"`
	//
	//Binary form of new_passphrase, if specified will override new_passphrase.
	//When using JSON, this field must be encoded as base64.
	NewPassphraseBin []byte `protobuf:"bytes,4,opt,name=new_passphrase_bin,json=newPassphraseBin,proto3" json:"new_passphrase_bin,omitempty"`
}

func (x *ChangePasswordRequest) Reset() {
	*x = ChangePasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metaservice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordRequest) ProtoMessage() {}

func (x *ChangePasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metaservice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordRequest.ProtoReflect.Descriptor instead.
func (*ChangePasswordRequest) Descriptor() ([]byte, []int) {
	return file_metaservice_proto_rawDescGZIP(), []int{2}
}

func (x *ChangePasswordRequest) GetCurrentPassphrase() string {
	if x != nil {
		return x.CurrentPassphrase
	}
	return ""
}

func (x *ChangePasswordRequest) GetCurrentPasswordBin() []byte {
	if x != nil {
		return x.CurrentPasswordBin
	}
	return nil
}

func (x *ChangePasswordRequest) GetNewPassphrase() string {
	if x != nil {
		return x.NewPassphrase
	}
	return ""
}

func (x *ChangePasswordRequest) GetNewPassphraseBin() []byte {
	if x != nil {
		return x.NewPassphraseBin
	}
	return nil
}

type ChangePasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChangePasswordResponse) Reset() {
	*x = ChangePasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metaservice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordResponse) ProtoMessage() {}

func (x *ChangePasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metaservice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordResponse.ProtoReflect.Descriptor instead.
func (*ChangePasswordResponse) Descriptor() ([]byte, []int) {
	return file_metaservice_proto_rawDescGZIP(), []int{3}
}

type CheckPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	//current_password should be the current valid passphrase used to unlock the daemon.
	WalletPassphrase string `protobuf:"bytes,1,opt,name=wallet_passphrase,json=walletPassphrase,proto3" json:"wallet_passphrase,omitempty"`
	//
	//Binary form of current_passphrase, if specified will override current_passphrase.
	//When using JSON, this field must be encoded as base64.
	WalletPasswordBin []byte `protobuf:"bytes,2,opt,name=wallet_password_bin,json=walletPasswordBin,proto3" json:"wallet_password_bin,omitempty"`
}

func (x *CheckPasswordRequest) Reset() {
	*x = CheckPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metaservice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPasswordRequest) ProtoMessage() {}

func (x *CheckPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metaservice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPasswordRequest.ProtoReflect.Descriptor instead.
func (*CheckPasswordRequest) Descriptor() ([]byte, []int) {
	return file_metaservice_proto_rawDescGZIP(), []int{4}
}

func (x *CheckPasswordRequest) GetWalletPassphrase() string {
	if x != nil {
		return x.WalletPassphrase
	}
	return ""
}

func (x *CheckPasswordRequest) GetWalletPasswordBin() []byte {
	if x != nil {
		return x.WalletPasswordBin
	}
	return nil
}

type CheckPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidPassphrase bool `protobuf:"varint,1,opt,name=valid_passphrase,json=validPassphrase,proto3" json:"valid_passphrase,omitempty"`
}

func (x *CheckPasswordResponse) Reset() {
	*x = CheckPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metaservice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckPasswordResponse) ProtoMessage() {}

func (x *CheckPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metaservice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckPasswordResponse.ProtoReflect.Descriptor instead.
func (*CheckPasswordResponse) Descriptor() ([]byte, []int) {
	return file_metaservice_proto_rawDescGZIP(), []int{5}
}

func (x *CheckPasswordResponse) GetValidPassphrase() bool {
	if x != nil {
		return x.ValidPassphrase
	}
	return false
}

var File_metaservice_proto protoreflect.FileDescriptor

var file_metaservice_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6c, 0x6e, 0x72, 0x70, 0x63, 0x1a, 0x09, 0x70, 0x6b, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x09, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x32,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x6e, 0x65, 0x75, 0x74,
	0x72, 0x69, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x6e, 0x72,
	0x70, 0x63, 0x2e, 0x4e, 0x65, 0x75, 0x74, 0x72, 0x69, 0x6e, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x6e, 0x65, 0x75, 0x74, 0x72, 0x69, 0x6e, 0x6f, 0x12, 0x29, 0x0a, 0x06, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x6e, 0x72, 0x70,
	0x63, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x6e, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x09, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0xcd, 0x01, 0x0a, 0x15, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72,
	0x61, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x42, 0x69, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x73,
	0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e,
	0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x12,
	0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x5f, 0x62,
	0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73,
	0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x42, 0x69, 0x6e, 0x22, 0x18, 0x0a, 0x16, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x73, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x11,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x62, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x69, 0x6e, 0x22, 0x42, 0x0a, 0x15, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73,
	0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x50, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x32, 0xe5, 0x01,
	0x0a, 0x0b, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x12, 0x16, 0x2e, 0x6c, 0x6e, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x6c, 0x6e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x2e, 0x6c,
	0x6e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6c, 0x6e, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x2e, 0x6c, 0x6e, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6c, 0x6e, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6b, 0x74, 0x2d, 0x63, 0x61, 0x73, 0x68, 0x2f, 0x70, 0x6b, 0x74,
	0x64, 0x2f, 0x6c, 0x6e, 0x64, 0x2f, 0x6c, 0x6e, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_metaservice_proto_rawDescOnce sync.Once
	file_metaservice_proto_rawDescData = file_metaservice_proto_rawDesc
)

func file_metaservice_proto_rawDescGZIP() []byte {
	file_metaservice_proto_rawDescOnce.Do(func() {
		file_metaservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_metaservice_proto_rawDescData)
	})
	return file_metaservice_proto_rawDescData
}

var file_metaservice_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_metaservice_proto_goTypes = []interface{}{
	(*GetInfo2Request)(nil),        // 0: lnrpc.GetInfo2Request
	(*GetInfo2Response)(nil),       // 1: lnrpc.GetInfo2Response
	(*ChangePasswordRequest)(nil),  // 2: lnrpc.ChangePasswordRequest
	(*ChangePasswordResponse)(nil), // 3: lnrpc.ChangePasswordResponse
	(*CheckPasswordRequest)(nil),   // 4: lnrpc.CheckPasswordRequest
	(*CheckPasswordResponse)(nil),  // 5: lnrpc.CheckPasswordResponse
	(*NeutrinoInfo)(nil),           // 6: lnrpc.NeutrinoInfo
	(*WalletInfo)(nil),             // 7: lnrpc.WalletInfo
	(*GetInfoResponse)(nil),        // 8: lnrpc.GetInfoResponse
}
var file_metaservice_proto_depIdxs = []int32{
	6, // 0: lnrpc.GetInfo2Response.neutrino:type_name -> lnrpc.NeutrinoInfo
	7, // 1: lnrpc.GetInfo2Response.wallet:type_name -> lnrpc.WalletInfo
	8, // 2: lnrpc.GetInfo2Response.lightning:type_name -> lnrpc.GetInfoResponse
	0, // 3: lnrpc.MetaService.GetInfo2:input_type -> lnrpc.GetInfo2Request
	2, // 4: lnrpc.MetaService.ChangePassword:input_type -> lnrpc.ChangePasswordRequest
	4, // 5: lnrpc.MetaService.CheckPassword:input_type -> lnrpc.CheckPasswordRequest
	1, // 6: lnrpc.MetaService.GetInfo2:output_type -> lnrpc.GetInfo2Response
	3, // 7: lnrpc.MetaService.ChangePassword:output_type -> lnrpc.ChangePasswordResponse
	5, // 8: lnrpc.MetaService.CheckPassword:output_type -> lnrpc.CheckPasswordResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_metaservice_proto_init() }
func file_metaservice_proto_init() {
	if File_metaservice_proto != nil {
		return
	}
	file_pkt_proto_init()
	file_rpc_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_metaservice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfo2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metaservice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInfo2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metaservice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metaservice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metaservice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metaservice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_metaservice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_metaservice_proto_goTypes,
		DependencyIndexes: file_metaservice_proto_depIdxs,
		MessageInfos:      file_metaservice_proto_msgTypes,
	}.Build()
	File_metaservice_proto = out.File
	file_metaservice_proto_rawDesc = nil
	file_metaservice_proto_goTypes = nil
	file_metaservice_proto_depIdxs = nil
}
